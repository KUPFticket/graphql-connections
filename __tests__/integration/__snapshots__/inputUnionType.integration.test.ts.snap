// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input Union Type handles errors not using variables with compound filter 1`] = `
"{\\"errors\\":[{\\"message\\":\\"Expected type FilterInputScalar, found {or: [{fields: \\\\\\"age\\\\\\", value: \\\\\\"41\\\\\\", operator: \\\\\\"=\\\\\\"}, {field: \\\\\\"age\\\\\\", value: \\\\\\"31\\\\\\", operator: \\\\\\"=\\\\\\"}, {and: [{field: \\\\\\"haircolor\\\\\\", value: \\\\\\"gray\\\\\\", operator: \\\\\\"=\\\\\\"}, {field: \\\\\\"age\\\\\\", value: \\\\\\"70\\\\\\", operator: \\\\\\"=\\\\\\"}, {not: [{field: \\\\\\"firstname\\\\\\", value: \\\\\\"Kenyon\\\\\\", operator: \\\\\\"=\\\\\\"}, {field: \\\\\\"firstname\\\\\\", value: \\\\\\"Nerissa\\\\\\", operator: \\\\\\"=\\\\\\"}]}]}]}; FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\",\\"locations\\":[{\\"line\\":4,\\"column\\":30}],\\"extensions\\":{\\"code\\":\\"GRAPHQL_VALIDATION_FAILED\\"}}]}
"
`;

exports[`Input Union Type handles errors not using variables with single filter 1`] = `
"{\\"errors\\":[{\\"message\\":\\"Expected type FilterInputScalar, found {fields: \\\\\\"haircolor\\\\\\", value: \\\\\\"gray\\\\\\", operator: \\\\\\"=\\\\\\"}; FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\",\\"locations\\":[{\\"line\\":4,\\"column\\":33}],\\"extensions\\":{\\"code\\":\\"GRAPHQL_VALIDATION_FAILED\\"}}]}
"
`;

exports[`Input Union Type handles errors using variables with compound filter 1`] = `
"{\\"errors\\":[{\\"message\\":\\"Variable \\\\\\"$filter\\\\\\" got invalid value { or: { fields: \\\\\\"age\\\\\\", value: \\\\\\"31\\\\\\", operator: \\\\\\"=\\\\\\" } }; Expected type FilterInputScalar; FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\",\\"locations\\":[{\\"line\\":2,\\"column\\":23}],\\"extensions\\":{\\"code\\":\\"INTERNAL_SERVER_ERROR\\",\\"exception\\":{\\"message\\":\\"FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\"}}}]}
"
`;

exports[`Input Union Type handles errors using variables with single filter 1`] = `
"{\\"errors\\":[{\\"message\\":\\"Variable \\\\\\"$filter\\\\\\" got invalid value { field: \\\\\\"age\\\\\\", values: \\\\\\"30\\\\\\", operator: \\\\\\"=\\\\\\" }; Expected type FilterInputScalar; FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\",\\"locations\\":[{\\"line\\":2,\\"column\\":23}],\\"extensions\\":{\\"code\\":\\"INTERNAL_SERVER_ERROR\\",\\"exception\\":{\\"message\\":\\"FilterInputScalar should be composed of either: CompoundFilterScalar \`{and: [FilterInputScalar], or: [FilterInputScalar], not: [FilterInputScalar]}\`, or FilterScalar \`{field: String, operator: String, value: String}\`\\"}}}]}
"
`;
